<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Dariusz Sadowski]]></title>
  <link href="http://darsadow.com/atom.xml" rel="self"/>
  <link href="http://darsadow.com/"/>
  <updated>2013-08-07T02:08:32+02:00</updated>
  <id>http://darsadow.com/</id>
  <author>
    <name><![CDATA[Dariusz Sadowski]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Why Python?]]></title>
    <link href="http://darsadow.com/blog/2013/08/07/why-did-i-choose-python/"/>
    <updated>2013-08-07T00:35:00+02:00</updated>
    <id>http://darsadow.com/blog/2013/08/07/why-did-i-choose-python</id>
    <content type="html"><![CDATA[<p>Most of the time I&rsquo;m working with PHP. Last few months I&rsquo;ve got interested in Ruby and Rails. But it didn&rsquo;t felt right.</p>

<p>Ruby is a very nice language and I need to say it&rsquo;s very relaxing to write web applications it it. It&rsquo;s not about that. What I want from my second-ish language is more flexibility in what I&rsquo;m doing and what I can do.</p>

<ol>
<li>Python is a really platform agnostic language. SublimeText is here the best example. It&rsquo;s working same way on all systems.</li>
<li>What with desktop applications? Ruby is like PHP &ndash; all about web. Here again Sublime and Spotify can be an example.</li>
<li>But I&rsquo;m still in love with web-dev. So django it is.</li>
<li>Write less, get more. Python is here similar to Ruby. Maybe a bit more typing, but still way better than $hitloadOfWords in PHP.</li>
<li>&ldquo;Big Data&rdquo; &ndash; lots of <a href="http://nborwankar.github.io/LearnDataScience/">courses</a> use Python and afair Coursera big data course use it too.</li>
<li>Performance &ndash; you know &hellip;</li>
<li>Server side scripting and integrations. SOcket servers, workers, helpers etc on *NIX servers.</li>
</ol>


<p>Python is valid and the best for all of these requirements. PHP and Ruby can achieve same results, but they aren&rsquo;t made for that.</p>

<p>Conlusion: for now PHP (and Ruby) stays as working languages. In free time I&rsquo;ll do more Python.</p>

<p>PS
Haters gonna hate, but use right tool for the job. I like PHP for cheap infrastructure and that how easy it is to create web apps. Ruby for meta programming and nice intergrations. But, you know, better is the enemy of good.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[LAMP for Windows]]></title>
    <link href="http://darsadow.com/blog/2013/08/04/lamp-for-windows/"/>
    <updated>2013-08-04T21:46:00+02:00</updated>
    <id>http://darsadow.com/blog/2013/08/04/lamp-for-windows</id>
    <content type="html"><![CDATA[<p>I&rsquo;m a huge fan on *NIX operating sytems. I love console and I can&rsquo;t imagine how to work with git with GUI but when it comes to day-to-day work every Linux Desktop simply sux.</p>

<p>And I&rsquo;m not talking about how it looks. Every Linux has his thing with stability. For example java &ndash; one day it&rsquo;s ok and next day it&rsquo;s broken God knows why. I don&rsquo;t have these problems when I&rsquo;m on Windows. Everything is simply working. BTW when I&rsquo;m using Windows 8 my laptop it gives me 4 hours on battery. With Ubuntu only 1,5.</p>

<p>But I&rsquo;m still webdeveloper so I need server with *NIX and easy access when I need it. The solution is virtualization.</p>

<ul>
<li>I have power of unix console via Putty</li>
<li>Code editors are running under Windows, so they are rock solid stable.</li>
<li>Files are visible via Samba &amp; Windows Mapped Network Drive W:\ so I&rsquo;m working like on Windows.</li>
<li>I have internal domains and properly configured Apache, so for new project all I need is create a new directory.</li>
<li>When I don&rsquo;t need Linux I can simply turn off VM</li>
</ul>


<p>After some time I&rsquo;ve finally created generic VM for PHP/Rails development. AFAIR it&rsquo;s third generation when I&rsquo;m recreating my dev env. But after some time it&rsquo;s really easy and now packaged before I&rsquo;ve imported all stuff inside machine ;)</p>

<h2>Contents</h2>

<ul>
<li>Ubuntu 13.04 &ndash; user: dev, password: root</li>
<li>Apache 2.2.22</li>
<li>PHP 5.4.9</li>
<li>MySQL 5.5.32 &ndash; user: root, password: root, accessible from any host</li>
<li>PostgreSQL 9.2.4 &ndash; nothing changed</li>
<li><a href="https://rvm.io/">RVM</a>

<ul>
<li>Ruby 2 &amp; Rails 4</li>
<li>Ruby 1.9.3-p448</li>
</ul>
</li>
<li>.gitconfig &ndash; lots of aliases for less typing &ndash; remember to change user and email settings</li>
<li>.bash_aliases &ndash; better shell experience and again lots of aliases</li>
</ul>


<h2>Installation</h2>

<ul>
<li><a href="https://docs.google.com/file/d/0B2iWs6XKRSHlMXdsckdvVlF4SXM/edit?usp=sharing">Download package</a></li>
<li>Import it using File &ndash;> Import Appliance from VirtualBox main menu</li>
<li>Run VM</li>
</ul>


<p>As I checked network interfaces has changed names. Check how it is in your case</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ip link show</span></code></pre></td></tr></table></div></figure>


<p>and accordingly change names in /etc/network/interfaces</p>

<p>Last thing &ndash; dynamic DNS on Windows side. You need <a href="http://sourceforge.net/projects/acrylic/">Acrylic DNS Proxy</a> and first DNS setted to 127.0.0.1. Acrylic offers hosts file with wildcards where you can set all development domains to VM IP.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>192.168.56.7    *.dev
</span><span class='line'>192.168.56.7    *.local
</span><span class='line'>192.168.56.7    *.etc</span></code></pre></td></tr></table></div></figure>


<p>And the last thing. <code>/var/www/</code> is available under <code>\\192.168.56.7\www</code>. I suggest you use it as Windows Mapped disk.</p>

<p>Enjoy if you like it / Hate me if I&rsquo;ve forgot about something ;)</p>
]]></content>
  </entry>
  
</feed>
